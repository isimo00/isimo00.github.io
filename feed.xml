<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.3">Jekyll</generator><link href="https://isimo00.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://isimo00.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-05-19T23:32:00+00:00</updated><id>https://isimo00.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal webpage of Irene Simó Muñoz </subtitle><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://isimo00.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://isimo00.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://isimo00.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry><entry><title type="html">Gossiping in social networks</title><link href="https://isimo00.github.io/blog/1990/gerrymandering/" rel="alternate" type="text/html" title="Gossiping in social networks"/><published>1990-01-01T17:39:00+00:00</published><updated>1990-01-01T17:39:00+00:00</updated><id>https://isimo00.github.io/blog/1990/gerrymandering</id><content type="html" xml:base="https://isimo00.github.io/blog/1990/gerrymandering/"><![CDATA[<h1 id="gerrymandering-or-political-districting">Gerrymandering or Political Districting</h1> <p>The “Masachussetts Problem”</p> <p><em>Gerrymandering</em> is the practice of partitioning a graph in I have modelled this problem from three different perspectives:</p> <ol> <li>Creating an heuristic that finds a gerrymandered solution given an initial district map</li> <li>Defining a combinatorial (optimization) problem with a SAT formulation</li> <li>Defining game theory dynamic</li> </ol>]]></content><author><name></name></author><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[Exploration of the political districting problem]]></summary></entry><entry><title type="html">Random Hyperbolic Graphs and social networks</title><link href="https://isimo00.github.io/blog/1990/rhgs/" rel="alternate" type="text/html" title="Random Hyperbolic Graphs and social networks"/><published>1990-01-01T17:39:00+00:00</published><updated>1990-01-01T17:39:00+00:00</updated><id>https://isimo00.github.io/blog/1990/rhgs</id><content type="html" xml:base="https://isimo00.github.io/blog/1990/rhgs/"><![CDATA[<p>How to synthesize graphs that are high-fidelity representations of real social networks has been a question for quite some time. There are a few very popoular - even classic, at this point - approaches, notably the Erdos-Renyi, Barábasi-Albert or Watts-Strogatz models. The literature on any of these three is so large and rich that there’s no possible way I could provide a better explanation or intuition of their mechanics than anything already out there. However, it is worth mentioning why none of these are perfect models, and why RHGs can outperform them in quality in some aspects.</p>]]></content><author><name></name></author><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[My intuitive notes on RGHs]]></summary></entry><entry><title type="html">Gossiping in social networks</title><link href="https://isimo00.github.io/blog/1990/social-dynamics/" rel="alternate" type="text/html" title="Gossiping in social networks"/><published>1990-01-01T17:39:00+00:00</published><updated>1990-01-01T17:39:00+00:00</updated><id>https://isimo00.github.io/blog/1990/social-dynamics</id><content type="html" xml:base="https://isimo00.github.io/blog/1990/social-dynamics/"><![CDATA[<h1 id="gossiping-and-opinion-dynamics-in-social-networks">Gossiping and opinion dynamics in Social Networks</h1> <p>This post is composed by extracts and extensions of a project I started developing when taking the Complex Social Networks course in Fall 2023. I began studying the gossip spread in the giant component of Random Hyperbolic Graphs (RGHs) in the regime when the degree distribution obeys a power law with an exponent in the range (2,3). I focused on the spread’s speed and convergence in comparison to other classic graph models; Erdős–Rényi (ER), Barábasi-Albert (BA), and Watts-Strogartz (WS). Based on the idea that hubs are the main boosters of diffusion, I presented and proved adaptations of ER, BA and WS graph models that present the same average degree that a RGH of the same size in expectation. Of course, their degree distributions still don’t follow a power law, and therefore that first study ended up being an analysis of how such degree distribution and other properties (preferential attachment, small-world phenomena) impact the speed of diffusion.</p> <h2 id="is-the-giant-component-of-a-rhg-also-a-rhg">Is the giant component of a RHG also a RHG?</h2> <p>In order to study spread of any kind in a graph, we must first make sure such graph is connected. RGHs often are not connected, but exhibit a giant component that, furthermore, contains all the hub nodes w.h.p.. In the title question, we want to know, does the giant component also obey a power law degree distribution? The following plot shows the degree distribution of a RHG sample for 3000 nodes, $\nu=1$ and $\alpha=0.9$</p> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/img/loglog-480.webp 480w,/assets/img/loglog-800.webp 800w,/assets/img/loglog-1400.webp 1400w," sizes="95vw" type="image/webp"/> <img src="/assets/img/loglog.png" class="img-fluid rounded z-depth-1" width="100%" height="auto" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> <h2 id="gossiping">Gossiping</h2> <p>The gossiping problem was proposed originally as follows (1):</p> <blockquote> <p>There are $n$ ladies, and each of them knows some item of gossip not known to the others. They communicate by telephone, and whenever one lady calls another, they tell each other all that they know at that time. How many calls are required before each gossip knows everything?</p> </blockquote> <p>If we set the number of gossips -and therefore ladies or sources- to $n=1$, this is equivalent to broadcasting. Now, intuitively, nodes with large degrees, also known as celebrities or <strong>influencers</strong>, should be the most effective sources of gossip if we want to to optimize the spread speed, right? Were we to want to get a message across a network as quick as possible, it seems natural to choose such sources. But if we are trying to promote our friend’s business, getting a “big” celebrity (one of the nodes with highest degree) to talk about it might be unfeasible, because such person is unreachable. Rather, we could think of contacting a few, less-known micro-celebrities. Maybe if we do that skillfully enough, we might be even able to spread our message even faster than if we contacted the big celebrity to begin with!</p> <p>We want to focus on this new optimization problem and its dynamics. How many, how popular celebrities would be optimal for our gossiping or broadcasting scenario?</p> <h2 id="opinion-dynamics">Opinion dynamics</h2> <p>In the previous scenario, we assumed nodes agreed to receive and then spread the message once it gets to them. In a real complex social network, this is unlikely. We can define the cost of getting a node to spread our gossip as their degree. Then, for a graph $G=(V, E)$ with the typical definition of a node $v$ neighborhood $N(v)={u\in V \mid (u, v)\in E}$, its cost \(c: V \to \mathbb{N}\) where $c(v)=|N(v)|$. This not only affects us as source-placers, but also indicates that in order to get a hub (high-degree node) to spread our gossip, all their neighbors must already know the gossip - or it must be a source -. This might make hubs look useless unless they are sources.</p> <p>However, in the real world, there are many pieces of gossip being spread at the same time. Some of it might be contrary to ours, so we can try and see in what situations we have some interesting scenarios</p> <ul> <li>In induced tree structures, leave-parents (this is, nodes which have at least one neighbor with degree 1) will never accept any gossip unless all their neigbhors but not themselves are sources of the same gossip, in which case they will accept the gossip in the first iteration or timestep</li> <li> <h3 id="bibliography">Bibliography</h3> </li> <li>(1)</li> </ul>]]></content><author><name></name></author><category term="formatting"/><category term="diagrams"/><summary type="html"><![CDATA[Some informal exploration of gossip spread using Random Hyperbolic Graphs (RGHs)]]></summary></entry></feed>